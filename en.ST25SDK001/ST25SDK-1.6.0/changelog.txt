////// v1.6.0 - February 14th 2020:
* st25sdk.jar v1.6.0
    * API changes
      - Added methods setIsReadMultipleBlockSupported(boolean) and setIsWriteMultipleBlockSupported(boolean) to 
        correctly configure Type 5 and Vicinity ST25 tag read and write operations
    * Changes and improvements:
      - Performance improvement: Modified readBlocks and writeBlocks methods to ignore TAG_NOT_IN_THE_FIELD errors
        that may result in using read/write SingleBlocks commands erroneously, thus degrading the performance.
      - Dynamic register for Energy Harvesting control is now available for the ST25TVPTag class
      - Type1 command robustness improvement
      - Correction of Empty NDEF record to follow NFC Forum specification
      - Correction of API documentation
    * Bug fixes:
      - Type 5 CC File data now correctly updated when writing a NDEF message
      - Fixed issue "Maximum number of block to write not supported". In case of error the number of blocks written 
        will decrease (minimum is 2 blocks)

* Reader libraries v1.6.0
    * All readers:
        - Remove sensitive password information found in logs
    * ST readers
        - Add missing dependencies for streader.dll


////// v1.5.0 - July 10th 2019:
* st25sdk.jar v1.5.1
    * New Features:
      - Added support for NFC Forum Type 1 (Topaz) protocol
      - Added support for NFC Forum Type 3 and Iso18092  protocols
      - Added support for Picopass commands
    * API changes
      - Added method copyRecord() in NdefRecordFactory.java to return a copy of a NDEF Record
      - Added method getRecordType() in NdefRecordFactory.java to return the type of a NDEF Record as a String
      - Added NFC_TAG_PICOPASS, NFC_TAG_TYPE_3 and NFC_TAG_ISO18092 to the NfcTagTypes enum of NFCTag class
      - Added NFC_PICOPASS and NFC_TYPE3 to the InventoryMode enum of RFReaderInterface class
      - RFReaderInterface: added setTagResponseLengthInBytes() API for readers that need to know the exact length of the tag's data response before sending the command
      - Added PRODUCT_GENERIC_PICOPASS, PRODUCT_GENERIC_TYPE3 and PRODUCT_GENERIC_ISO18092 to the ProductID enum of TagHelper class
      - Added new NFC_TYPE3 STExceptions
    * Changes and improvements:
      - Complete the list of tag manufacturers in TagHelper class
      - ST25TVTag: Sets expected tag response inside readCounterValue() for FEIG readers so that the application doesn't have to worry about it
      - Improvements in implementing TLV jumps for T2T areas to fit the NFC Forum standard more completely
    * Bug fixes:
      - Fixed for Message End (ME) bit not positioned to the end of the NDEF message when there are several records
      - Fixed bug in pps() method of Iso14443aCommand class
      - Fixed parameter check in writeMsg() method of Iso15693CustomCommand class
      - Fixed bug where characters with accents were not read correctly in sms and email records
      - Better support for ST25TA512-K tags in TagHelper
      - Fixed bug in getMemSizeInBytes() of the Type2Tag class when returning NFC Forum Type 2 tag's memory size

* Reader libraries v1.5.0
    * All readers:
        - Added READER_MODE_ISO15693_FAST_MODE, READER_MODE_TYPE1_MODE, READER_MODE_PICOPASS_ONE_SC_MODE, READER_MODE_PICOPASS_TWO_SC_MODE
          and READER_MODE_ISO18092_MODE to RFReaderMode enum of the ReaderInterface class
        - Implemented the setTagResponseLengthInBytes() command added to the RFReaderInterface
    * ST readers
        - Added implementation of NFC Forum Type 1 (Topaz), Picopass, NFC Forum Type 3 and Iso18092 protocols to streader.dll
        - Added a 10ms delay for the setMode command to ensure the reader has enough time to switch to the proper configuration


////// v1.4.0 - March 29th 2019:
* st25sdk.jar
    * API changes
      - Overloaded Type4Tag readNdefMessage() and writeNdefMessage with an extra parameter to add a password to the sequence
      - Added method getAreaFromByteAddress(int address) to MultiAreaInterface
      - Added getNdefRecord(byte[] buffer) factory function to generate a NDEFRecord from a byte array
    * New Features:
      - Support for the ST25TV04-P NFC Forum Type 5 tag: 4K EEPROM + Energy Harvesting + GPO
      - Preliminary support for NFC Forum Type 2 tags: NFC Forum commands, Ndef and Control TLVs (Memory and Lock control)
      - Added iso15693 / iso14443A / Picopass CRC calculation functions
    * Changes and improvements:
      - ST25DVTag.disableMailbox() now checks if the static register enables mailbox operations before rewriting the dynamic register
      - Update of ST25DV CCFile: So far, the READ_MULTIPLE_BLOCK flag was disabled when using a ST25DV04K. We now disable it when Area1 size is less than 4kbits.
        This way, the fix can work also for ST25DV16K or ST25DV64K with a small Area1.
      - NDEF type4A: Added possibility to insert a password in NDEF sequence
      - MultiAreaInterface: Added boundary checks in getAreaFromBlockAddress()
      - STType4Tags: Replaced call to readBinary by extendedReadBinary command in ReadBytes(with password) - No API change
    * Bug fixes:
      - Fixed a possible exception in Type4Command.readData() if the returned data is bigger than expected
      - Corrects bug on STRegister.getRegisterValue() where only the LSB value would be returned on 2-byte registers (like the ST25TV write counter register)
      - "TAG_NOT_IN_THE_FIELD" exceptions from Android are handled along with "RFREADER_NO_RESPONSE" from readers for NO TAG response

* Reader libraries
    * All readers:
        - New getMode() API in ReaderInterface to read the current configuration of the reader
        - Performance improvement when using setMode() API to change the reader's RF protocol
    * FEIG ELECTRONIC readers
        - Moved to FEIG's SDK v5.0.0 API version
        - Fixed sdk bug in NFC Forum Type 4B Inventory for FEIG readers
        - Reset frame's block number when an iso14443A command is sent
        - Corrected buffer size for STType 4 tag's chaining command of 255 bytes
        - CPR30-USB:
          - We recommend using firmware version ID.CPR30-U_-_0105133.obid.fw.xml or higher for Type2 ACK/NACK management correction
    * ST readers
        - Added Type 2 support for all ST reader discovery boards
        - ST25R3916-DISCO:
            - Official support version with a few bug fixes. Renamed from ST25R3916EVAL.


////// ST25SDK v1.3.2 - October 17th 2018:
* st25sdk.jar v1.3.2
    * API changes:
      - ST25DVTag methods readConfig(), writeConfig(), readDynConfig() and writeDynConfig() now have an optional flag parameter

* Reader libraries v1.3.2
    * All readers:
      - Corrected issue with file path in reader libraries
      - Beta version of ReaderCapabilities API. Methods from ReaderCapabilitiesContainer class return a boolean if the reader supports one of these features:
            - isFastCommand(), 	isIso14443A(), isIso14443B(), isIso14443Sr(), isIso15693()


////// v1.3.1 - September 28th 2018:
    * Bug fixes:
      - Corrected regression on Android devices when calling identifyType4Product(). Low-level ISO14443-A commands were sent that are not supported on Android.
    * API changes
      - Iso14443aTag.rats() and Iso14443aTag.pps() are now public
      - Iso14443aTag.iso14443aSelectTag() has been overloaded to include rats, cid and pps parameters

* Reader libraries
    * FEIG ELECTRONIC readers
    * ST readers
        - Support for SAK answer from iso14443a tag select command


////// v1.3.0 - August 10th 2018:
* st25sdk.jar
    * API changes
      - /!\ API break in RFReaderInterface (impacts reader implementation only, should be transparent to most SDK users):
        - iso14443bSelectTag() now returns a byte instead of a byte[] array
        - iso14443bDeSelectTag() added to the interface
      - writeNdefMessage() from tag classes now takes an extra updateCCFile boolean parameter. By default, this value is set to true.
        Set to false to prevent the writeNdefMessage command from rewriting a CCFile when inconsistencies are detected.
      - isCCFileValid() API checks the validity of Type5Tag CCFiles
    * New Features:
      - Support for ST25TV16K tag
      - Iso14443aCommand.iso14443aSelectTag() provides an easy entry to a SELECT sequence for ISO144443-A tags
      - Added getICRef() API for ISO14443-SR tags
    * Changes and improvements:
      - Improved discovery of Type2, Type4 and Type5 tags in TagHelper.
      - Added support of NDEF Application version 1 on Type4 tags (in addition of version 2)
      - Removed private methods from javadoc
    * Bug fixes:
      - NdefRecordFactory.getNdefRecordType() now returns NdefRecordType.UNKNOWN_TYPE for unknown TNF instead of NdefRecordType.MIME_RECORD_TYPE
      - NdefRecordFactory.getNdefRecordType() now returns the TNF value for records that do not need the TYPE field (including NDEFRecord.TNF_UNKNOWN)
      - Fixed PUPI extraction issue on ISO14443-B
      - Type4Tag memory size is extracted from the CCFile (NDEF File length) for generic tags

* Reader libraries
    * FEIG ELECTRONIC readers
        - CPR30 inventory() now detects ISO14443B-SR tags
        - CPR30 now manages ISO14443A/TYPE4A and ISO14443B/TYPEB tag selection sequences
    * ST readers
        - Preliminary support of ST25R3916EVAL prototype board
        - ST25R39xx readers now use anti-collision algorithm from the firmware for improved performance
        - Bug fix: Calling getReaderInfo() on CR95HF board would disconnect the reader
        - Bug fix: Corrected issue with buffer management during ISO15693 inventory for ST25R39xx readers
        - Bug fix: Corrected chaining on ST25TA tags when number of bytes in frame is greater than 254
        - Bug fix: Corrected BCC computation in STReader JNI


////// v1.2.0 - April 16th 2018:
* st25sdk.jar
    * API changes
      - TagHelper.identifyTypeVProduct() and TagHelper.identifyType4Product() can now throw the TAG_NOT_IN_THE_FIELD STException
        if the tag was moved out of the RF field in the middle of the discovery process.
      - ST25DVTag.readMailboxMessage and ST25DVTag.fastReadMailboxMessage return a status byte before the data when requested read size = 1.
    * New Features:
      - Support for ST25TV02K tag with signature, untraceable mode, EAS and tamper detect features. Contact ST for the full feature version.
      - Support for ST25DV-W1 and ST25DV-W2 dynamic tags with PWM output
      - New About class created to return the st25sdk library version + the list of extra features (available in NDA versions)
      - New STException MISSING_LIBRARY used when building an application with the SDK without the proper dependencies.
    * Changes and improvements:
      - Added writeCCFile(byte[] buffer) to CCFileInterface.
      - NDEF WifiRecord can now handle all the possible authentication and encryption types
    * Bug fixes:
     - Removed limitations of ST25DVTag.readMailboxMessage and ST25DVTag.fastReadMailboxMessage when asking for a single byte of data.
       Now no exception is sent + the status byte is returned before the data byte, to be coherent with the values returned for other sizes.
     - Added space between first name and last name values of the vCARD's [N]ame field

* Reader libraries
    * FEIG readers
        - Updated to return response for ST25TV and ST25DV-W commands
        - Added method to set the response length before any command
        - Adjusted FEIG readers transmit/receive length parameters
    * ST readers
        - Fixed toggling PCB for Type 4 anti-collision sequence
        - Corrected JNI crash on reconnect


////// v1.1.0 - February 13th 2018:
* st25sdk.jar
    * New Features:
      - Iso14443a API: low-level RF commands are now available in command/Iso14443aCommand
      - Crc: Added computeCrcIso14443A() function for the 14443A protocol
      - MultiAreaInterface: Added getPossibleReadWriteProtection() API to return all possible values that can be set for a given area
      - Added ISO15693_ERROR_WITH_NO_INFORMATION and ISO15693_GENERIC_CRYPTOGRAPHIC_ERROR in STException
    * Changes and improvements:
      - Now using the Addressed mode by default in STAreaContent. With the previous code, a non-addressed mode was used when reading or writing a NDEF message in an area other than the first one.
      - RFReaderInterface: Added ISO14443A_TRANSPARENT TransceiveMode to return all bytes from the apdu/Iso14443A commands
      - RFReaderInterface: Added iso14443aSelectTag() and iso14443aDeSelectTag() API to the interface
      - ST25DVTag: Corrected the maximum value of bytes that can be read from the mailbox (256 instead of 255)
      - LRi2K: Updated the maximum number of blocks that can be returned by readMultipleBlocks from 63 to 64
    * Bug fixes:
     - NDEF: Fixed issue with MIME record. The Mime string was not saved in the NDEF Record Type
     - Fixed errors reported by the Android Playstore

* Reader libraries
    * Generic readers
        - ReaderInterface: setMode() API + 4 more parameters added to the RFReaderConfigParam enum to set the reader protocol
            - MULTI_RF_MODE_SETTING, ISO15693_RF_MODE_SETTING, ISO14443A_RF_MODE_SETTING, ISO14443B_RF_MODE_SETTING
    * FEIG readers
        - Added preliminary support for FEIG CPR30 (Iso14443A/B and Iso15693 reader)
    * ST readers
        - Reworked JNI for the cr95hf and st25r3911 readers
        - cr95hf: changed usb library for Linux support


////// v1.0.1 - November 23rd 2017:
* Reader libraries
    * Bug fix:
        - STReader: Added Type 4 tag support to cr95hf reader on Windows (readers\st\resources\windows\x86\streader.dll)


////// v1.0.0 - November 20th 2017:
* Support for iso14443A/NFC Forum type 4A tags:
   - ST25TA, M24SR
   - Generic type 4 tags
* Support for iso15693/NFC Forum type 5 tags:
   - ST25DV, LRi, M24LR
   - Generic type 5 tags
* Support for iso14443B SR tags:
    - ST25TB, SRi, SRT